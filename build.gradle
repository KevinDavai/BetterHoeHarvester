plugins {
    id 'java'
    id 'com.gradleup.shadow' version '8.3.5'
}

group = 'com.nours'
version = '1.0.0'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven { url = uri("https://repo.codemc.io/repository/maven-releases/") }

    maven { url = uri("https://repo.papermc.io/repository/maven-public/") }
    maven { url = uri("https://maven.enginehub.org/repo/") }

    maven { url "https://repo.dmulloy2.net/repository/public/" }

}

dependencies {
    compileOnly("org.spigotmc:spigot-api:1.20.6-R0.1-SNAPSHOT")

    compileOnly 'com.comphenix.protocol:ProtocolLib:5.1.0'

    compileOnly 'com.sk89q.worldguard:worldguard-bukkit:7.0.0'

    implementation 'org.jetbrains:annotations:24.0.1'
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

/*
build {
    dependsOn shadowJar
}

shadowJar {
    dependsOn(jar)

    relocate 'com.github.retrooper.packetevents', 'com.nours.betterhoeharvester.libs.packetevents.api'
    relocate 'io.github.retrooper.packetevents', 'com.nours.betterhoeharvester.libs.packetevents.impl'
}
*/

